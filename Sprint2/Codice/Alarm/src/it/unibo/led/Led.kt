/* Generated by AN DISI Unibo */ 
package it.unibo.led

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023
class Led ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
				return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t03",targetState="athome",cond=whenDispatch("arrivedhome"))
					transition(edgeName="t04",targetState="currmoving",cond=whenDispatch("moving"))
					transition(edgeName="t05",targetState="arrested",cond=whenDispatch("stopped"))
				}	 
				state("athome") { //this:State
					action { //it:State
						CommUtils.outyellow("alarm - atHome")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t16",targetState="currmoving",cond=whenDispatch("moving"))
					transition(edgeName="t17",targetState="arrested",cond=whenDispatch("stopped"))
				}	 
				state("currmoving") { //this:State
					action { //it:State
						CommUtils.outyellow("alarm - moving")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t28",targetState="athome",cond=whenDispatch("arrivedhome"))
					transition(edgeName="t29",targetState="arrested",cond=whenDispatch("stopped"))
				}	 
				state("arrested") { //this:State
					action { //it:State
						CommUtils.outyellow("alarm - arrested")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t310",targetState="athome",cond=whenDispatch("arrivedhome"))
					transition(edgeName="t311",targetState="currmoving",cond=whenDispatch("moving"))
				}	 
			}
		}
} 
