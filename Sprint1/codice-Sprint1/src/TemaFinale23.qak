System temafinale23

//-----------------------------------------------------------------------

Dispatch doJob : doJob(PESO) 
Dispatch updateWeight : updateWeight(PESO) 
Event robotDead : robotDead( NO_PARAM )   

//-----------------------------------------------------------------------

Context ctxcoldstoragearea ip [host="localhost" port=9090]

//-----------------------------------------------------------------------

QActor controller context ctxcoldstoragearea {
	State s0 initial { 	    
		printCurrentMessage color black
		discardMsg Off
		//[# sysUtil.logMsgs=true #]
 	}     
 	Goto mockRequest
 	
 	State mockRequest {
		[#
			var KG = 10			
		#]
		printCurrentMessage
		println("controller sending current weight: $KG") color green
		//forward transport_trolley -m doJob : doJob(KG)
	} Transition repeat whenTime 2000 -> mockRequest
 }

QActor transport_trolley context ctxcoldstoragearea {
	[#
		var peso = 0
	#]
	
	State s0 initial {
		printCurrentMessage
	} Transition startWork whenMsg doJob -> work
	
	State work {
		printCurrentMessage
		onMsg ( doJob : doJob(PESO) ) {
			[# peso = payloadArg(0).toInt() 
				print(peso)
				#
			]
		}		
	} Goto endWork
	
	State endWork {
		printCurrentMessage
		//forward cold_room -m updateWeight : updateWeight(peso)
	}
} 

/*
QActor cold_room context ctxcoldstoragearea {
	[#
		var pesoCorrente = 0
	#]
	
	State s0 initial {
		printCurrentMessage
	} Transition update whenMsg updateWeight -> updateWeight
	
	State updateWeight {
		printCurrentMessage
		onMsg ( updateWeight : updateWeight(PESO) ) {
			[# pesoCorrente = payloadArg(0).toInt() #]
		}
		println("peso aggiornato")
		println("nuovo peso: $pesoCorrente")
	} Transition update whenMsg updateWeight -> updateWeight
}
*/
*/
