System temafinale23

//-----------------------------------------------------------------------

Dispatch doJob : doJob(PESO)
Dispatch updateWeight : updateWeight(PESO)

Event robotDead : robotDead(NO_PARAM)

//-----------------------------------------------------------------------

Context ctxColdStorageArea ip [host="127.0.0.1" port=8080]

//-----------------------------------------------------------------------

QActor controller context ctxColdStorageArea {
	State s0 initial {
		printCurrentMessage
	} Goto mockRequest
/*	
	State mockRequest {
		[#
			var KG = 10			
		#]
		printCurrentMessage
		forward transport_trolley -m doJob : doJob(KG)
	} Transition repeat whenTime 2000 -> mockRequest
}

QActor transport_trolley context ctxColdStorageArea {
	[#
		var peso = 0
	#]
	
	State s0 initial {
		printCurrentMessage
	} Transition startWork whenMsg doJob -> work
	
	State work {
		printCurrentMessage
		onMsg ( doJob : doJob(PESO) ) {
			[# peso = payloadArg(0).toInt() #]
		}		
	} Goto endWork
	
	State endWork {
		forward cold_room -m updateWeight : updateWeight(peso)
	}
} 

QActor cold_room context ctxColdStorageArea {
	[#
		var pesoCorrente = 0
	#]
	
	State s0 initial {
		printCurrentMessage
	} Transition update whenMsg updateWeight -> updateWeight
	
	State updateWeight {
		printCurrentMessage
		onMsg ( updateWeight : updateWeight(PESO) ) {
			[# pesoCorrente = payloadArg(0).toInt() #]
		}
		println("peso aggiornato")
		println("nuovo peso: $pesoCorrente")
	} Transition update whenMsg updateWeight -> updateWeight
}
*/

